# Задача на программирование: непрерывный рюкзак

# Первая строка содержит количество предметов 1≤n≤10^3 и вместимость рюкзака 
# 0≤W≤2⋅10^6. Каждая из следующих nn строк задаёт стоимость 0≤ci≤2⋅10^6 и 
# объём 0<wi≤2⋅10^6 предмета (n, W, ci, wi — целые числа). Выведите максимальную 
# стоимость частей предметов (от каждого предмета можно отделить любую часть, стоимость и объём 
# при этом пропорционально уменьшатся), помещающихся в данный рюкзак, с точностью не менее трёх 
# знаков после запятой.

# Sample Input:
# 3 50
# 60 20
# 100 50
# 120 30

# Sample Output:
# 180.000


def max_capacity(m, w):
    k = 0
    res = 0
    while w > 0 and k < len(m):
        if m[k][1] <= w:
            res += m[k][0]
            w = w - m[k][1]
        else:
            res += ((m[k][0] / m[k][1]) * w)
            w = w - m[k][1]
        k += 1

    print('%.3f' % res)


def main():
    m = []
    n, w = map(int, input().split())
    for i in range(0, n):
        m.append(list(float(j) for j in input().split()))
    m = sorted(m, key=lambda x: x[0] / x[1], reverse=True)
    max_capacity(m, w)


if __name__ == "__main__":
    main()
